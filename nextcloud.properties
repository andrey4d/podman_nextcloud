#!/bin/bash

ENGINE="podman"
NETWORK_NAME="nextcloud_net"
POD_NAME="nextcloud_pod" 
PORTS="-p 2080:80 -p 2443:443"

IMAGE_DB="docker.io/library/mariadb:latest"
IMAGE_APP="docker.io/library/nextcloud:fpm-alpine"
IMAGE_WEB="docker.io/library/nginx:latest"

CONTAINER_DB_NAME="nextcloud_db"
CONTAINER_APP_NAME="nextcloud_app"
CONTAINER_WEB_NAME="nextcloud_nginx"

VOLUME_ROOT="$(pwd)/volumes"
VOLUME_DB="${VOLUME_ROOT}/database"
VOLUME_APP="${VOLUME_ROOT}/nextcloud"
VOLUME_NGINX="${VOLUME_ROOT}/nginx"

MYSQL_ROOT_PASSWORD='Pa$$w0rd'
MYSQL_PASSWORD='Pa$$w0rd'

DOMAIN="dvampere"

## FUNCTION ##

function get_object_id() { #(OBJECT={pod, network, container}, OBJECT_NAME)
    local OBJECT="${1}"
    local OBJECT_NAME="${2}"
    echo $(${ENGINE} ${OBJECT} ls -f name=${OBJECT_NAME} --format "{{ .ID}}")
}

function run_container() { # (POD, OPTIONS, CONTAINER_NAME, ENV, VOLUMES, IMAGE, COMMAND)
    local POD="${1}"
    local OPTIONS="${2}"
    local CONTAINER_NAME="${3}"
    local ENV="${4}"
    local VOLUMES="${5}"
    local IMAGE="${6}"
    local COMMAND="${7}"
${ENGINE} run ${POD} ${OPTIONS} --name ${CONTAINER_NAME} ${ENV} ${VOLUMES} ${IMAGE} ${COMMAND}
}

function create_dir() {
    local VOLUME="${1}"
    if [[ ! -d "${VOLUME}" ]]; then
        mkdir -p "${VOLUME}"
    fi
}

function nginx_conf() {
echo "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" \
  | base64 -d | gunzip -c > "${1}/nginx_https.conf"
}
